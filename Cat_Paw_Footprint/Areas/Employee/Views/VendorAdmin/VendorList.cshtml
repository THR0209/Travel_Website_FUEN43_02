@model IEnumerable<Cat_Paw_Footprint.Areas.Employee.ViewModel.VendorAdminViewModel>
@using Microsoft.AspNetCore.Mvc.Rendering

<h2 class="mb-3">廠商管理</h2>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="table-responsive">
    <table class="table table-striped align-middle" id="productsTable">
        <thead>
            <tr>
                <th class="text-center" style="width:10%;">廠商編號</th>
                <th class="text-center" style="width:15%;">廠商帳號</th>
                <th class="text-center" style="width:20%;">廠商名稱</th>
                <th class="text-center" style="width:15%;">聯絡人</th>
                <th class="text-center" style="width:10%;">啟用</th>
                <th class="text-center" style="width:30%;">操作</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ven in Model)
            {
                <tr data-id="@ven.VendorId" data-Account="@ven.Account">
                    <td class="text-center">@ven.VendorId</td>
                    <td class="text-center">@ven.Account</td>
                    <td class="text-center">@ven.CompanyName</td>
                    <td class="text-center">@ven.ContactName</td>
                    <td>
                        <div class="form-check form-switch">
                            <input class="form-check-input js-status" type="checkbox" role="switch"
                                   @(ven.Status == true ? "checked" : "") />
                        </div>
                    </td>
                    <td class="text-center">
                        <button type="button" class="btn btn-info btn-sm js-detail">詳細資訊</button>
                        <button type="button" class="btn btn-info btn-sm js-history">登入紀錄</button>
                        <button type="button" class="btn btn-primary btn-sm js-save">儲存</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<form id="anti-form" method="post">
    @Html.AntiForgeryToken()
</form>

<div class="modal fade" id="venDetailModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">廠商詳細資料</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <!-- 這裡會被 Script 填資料 -->
            <div class="modal-body"><!-- AJAX 會塞 Partial 進來 --></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>
                        document.querySelectorAll(".js-detail").forEach(btn => {
                btn.addEventListener("click", async e => {
                    const tr = btn.closest("tr");
                        const account = tr.querySelector("td:nth-child(2)").textContent; // 假設帳號在第2欄

                    try {
        const res = await fetch('@Url.Action("VendorDetail", "VendorAdmin", new { area = "Employee" })' + `?account=${encodeURIComponent(account)}`, {
                            method: "GET",
                            headers: { "X-Requested-With": "XMLHttpRequest" }
                        });
                        if (!res.ok) throw new Error("HTTP " + res.status);

                        const html = await res.text();
                        document.querySelector("#venDetailModal .modal-body").innerHTML = html;


                        new bootstrap.Modal(document.getElementById('venDetailModal')).show();
                    } catch (err) {
                        alert("載入失敗：" + err.message);
                    }
                });
            });

             document.querySelectorAll(".js-history").forEach(btn => {
                    btn.addEventListener("click", async e => {
                        const tr = btn.closest("tr");
                        const vendorId = tr.querySelector("td:nth-child(1)").textContent; // 假設廠商id在第1欄

                        try {
                               const res = await fetch('@Url.Action("LoginHistory", "VendorAdmin", new { area = "Employee" })' + `?VendorId=${encodeURIComponent(vendorId)}`, {
                                method: "GET",
                                headers: { "X-Requested-With": "XMLHttpRequest" }
                            });
                            if (!res.ok) throw new Error("HTTP " + res.status);

                            const html = await res.text();
                            document.querySelector("#venDetailModal .modal-body").innerHTML = html;

                            new bootstrap.Modal(document.getElementById('venDetailModal')).show();
                        } catch (err) {
                            alert("載入失敗：" + err.message);
                        }
                    });
                });

                       //儲存
            document.querySelectorAll(".js-save").forEach(btn => {
                btn.addEventListener("click", async e => {
                    const tr = btn.closest("tr");
                    const account = tr.dataset.account;
                    const Status = tr.querySelector(".js-status").checked;
                    const form = new FormData();
                            form.append("account", account);
            form.append("status", Status ? "true" : "false");

                    const token = document.querySelector("#anti-form input[name=__RequestVerificationToken]").value;

                    if (token) form.append("__RequestVerificationToken", token);
                        btn.disabled = true;
                        const oldText = btn.textContent;
                        btn.textContent = "儲存中…";
                        try {
                                const res = await fetch('@Url.Action("UpdateStatus", "VendorAdmin", new { area = "Employee" })', {
                        method: "POST",
                        body: form,
                        headers: { "X-Requested-With": "XMLHttpRequest" }
                        });
                    if (!res.ok) throw new Error("HTTP " + res.status);
                        const data = await res.json();
                    if (data.success) {
                        alert("更新成功");
                    }
                    else {
                                    alert("更新失敗：" + (data.message || "請稍後再試"));
                                }
                        } catch (err) {
                        alert("發生錯誤：" + err.message);
                        } finally {
                                btn.disabled = false;
                                    btn.textContent = oldText;
                        }
                    });

                });
</script>

}
