@{
    ViewData["Title"] = "客戶登入";
}
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery
@{
    var tokens = antiforgery.GetAndStoreTokens(Context);
}
<meta name="csrf-token" content="@tokens.RequestToken" />
<div id="app" class="container mt-3">
  <h2>客戶登入</h2>

    <form v-on:submit.prevent="submitLogin">

    <div class="mb-3">
      <label for="account" class="form-label">帳號</label>
      <input type="text" class="form-control" id="account" v-model="account" required />
    </div>

    <div class="mb-3">
      <label for="password" class="form-label">密碼</label>
      <input type="password" class="form-control" id="password" v-model="password" required />
    </div>
        
    <button type="submit" class="btn btn-outline-primary">登入</button>

  </form>

  <div v-if="errors.length" class="alert alert-danger mt-3">
    <div v-for="(err, idx) in errors" :key="idx">{{ err }}</div>
  </div>
</div>
<a class="menu-link" asp-area="Employee" asp-controller="EmployeeAuth" asp-action="Register"><div>註冊</div></a>
<a class="menu-link" asp-area="CustomersArea" asp-controller="CusLogReg" asp-action="Register"><div>客戶註冊</div></a>

<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
const app = Vue.createApp({
  data() {
    return {
      account: "",
      password: "",
      errors: []
    };
  },
  methods: {
        async submitLogin() {
      this.errors = [];
           const token = document.querySelector('meta[name="csrf-token"]').getAttribute("content");
      try {
              const form = new FormData();
        form.append("account", this.account);
        form.append("password", this.password);
            const response = await axios.post("/CustomersArea/CusLogReg/Login", form, {
          headers: { "RequestVerificationToken": token }

        },
          {
            headers: {
              "RequestVerificationToken": token  // 🔥 這個一定要加
            }
          }
        );

        if (response.data.success) {
          // 登入成功 → 導向首頁
          window.location.href = response.data.redirectUrl;
        }
      } catch (err) {
            this.errors = [];
      if (err.response) {
        console.log("DEBUG raw:", err.response);          // 看整個 response
        console.log("DEBUG data:", err.response.data);    // 看 data
        console.log("DEBUG text:", JSON.stringify(err.response.data)); // 看字串化結果


        if (err.response.data.error) {
          this.errors.push(err.response.data.error);
        } else if (typeof err.response.data === "string") {
          this.errors.push(err.response.data); // 如果後端回傳的是純字串
        } else {
          this.errors.push("登入失敗，請稍後再試。");
        }
      } else {
        this.errors.push("登入失敗，請稍後再試。");
      }
      }
    }
  }
});
app.mount("#app");
</script>
