@{
    ViewData["Title"] = "購物車";
}
<div class="container py-4" id="app" v-cloak>
    <h2 class="mb-3">購物車</h2>

    <div class="mb-3 d-flex gap-2">
        <input v-model.number="customerId" type="number" class="form-control w-auto" placeholder="CustomerID (測試)">
        <button class="btn btn-outline-secondary" v-on:click ="reload">重新整理</button>
        <button class="btn btn-outline-info" v-on:click="addDemo">加入範例商品</button>
    </div>

    <div v-if="items.length===0" class="alert alert-info">購物車是空的</div>

    <div v-else class="table-responsive">
        <table class="table align-middle">
            <thead class="table-light">
                <tr>
                    <th style="width:32px">
                        <input type="checkbox" v-model="checkAll" v-on:change="toggleAll">
                    </th>
                    <th>商品</th>
                    <th class="text-end">單價</th>
                    <th class="text-center">數量</th>
                    <th class="text-end">小計</th>
                    <th style="width:100px"></th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="it in items" :key="it.productId">
                    <td><input type="checkbox" v-model="selected" :value="it.productId"></td>
                    <td class="d-flex align-items-center gap-2">
                        <img :src="it.imageUrl" alt="" style="width:60px;height:60px;object-fit:contain;background:#f8f9fa" />
                        <div>{{ it.productName }}</div>
                    </td>
                    <td class="text-end">NT$ {{ it.price.toLocaleString() }}</td>
                    <td class="text-center">
                        <div class="btn-group btn-group-sm">
                            <button class="btn btn-outline-secondary" v-on:click ="dec(it)">-</button>
                            <input type="number" class="form-control form-control-sm text-center"
                                   style="width:72px" v-model.number="it.qty" min="1" v-on:change="update(it)">
                            <button class="btn btn-outline-secondary" v-on:click="inc(it)">+</button>
                        </div>
                    </td>
                    <td class="text-end">NT$ {{ (it.price * it.qty).toLocaleString() }}</td>
                    <td><button class="btn btn-sm btn-outline-danger" v-on:click="remove(it.productId)">移除</button></td>
                </tr>
            </tbody>
            <tfoot class="position-sticky bottom-0 bg-white">
                <tr>
                    <th colspan="4" class="text-end">小計</th>
                    <th class="text-end">NT$ {{ subtotal.toLocaleString() }}</th>
                    <th></th>
                </tr>
                <tr v-if="discount>0">
                    <th colspan="4" class="text-end text-success">折扣</th>
                    <th class="text-end text-success">- NT$ {{ discount.toLocaleString() }}</th>
                    <th></th>
                </tr>
                <tr>
                    <th colspan="4" class="text-end">總計</th>
                    <th class="text-end fw-bold">NT$ {{ total.toLocaleString() }}</th>
                    <th></th>
                </tr>
            </tfoot>
        </table>
    </div>

    <div class="d-flex gap-2">
        <button class="btn btn-outline-secondary" v-on:click="clearCart" :disabled="items.length===0">清空</button>

        <!-- 轉帳 -->
        <button class="btn btn-outline-primary"
                :disabled="items.length===0 || !customerId"
                v-on:click="checkout('transfer')">
            轉帳付款
        </button>

        <!-- 信用卡 -->
        <button class="btn btn-primary"
                :disabled="items.length===0 || !customerId"
                v-on:click="checkout('card')">
            線上信用卡
        </button>
    </div>
</div>

@section Scripts {
    <style>
        [v-cloak] {
            display: none
        }</style>
    <script src="https://unpkg.com/vue@3/dist/vue.global.prod.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios@1/dist/axios.min.js"></script>
    <script>
        (() => {
          const { createApp, ref, onMounted } = Vue;

          createApp({
            setup(){
                const items = ref([]);
                const subtotal = ref(0);
                const discount = ref(0);
                const total = ref(0);

                const selected = ref([]);    // 批次選擇
                const checkAll = ref(false);

                function toggleAll(){
                  if (checkAll.value) selected.value = items.value.map(x => x.productId);
                  else selected.value = [];
                }
                function inc(it){ it.qty = Math.max(1, (it.qty||1)+1); update(it); }
                function dec(it){ it.qty = Math.max(1, (it.qty||1)-1); update(it); }

                async function reload(){
                  const { data } = await axios.get('/CustomersArea/Cart/api');
                  items.value = data.items || [];
                  subtotal.value = data.subtotal || 0;
                  discount.value = data.discount || 0;
                  total.value = data.total || 0;
                  checkAll.value = false;
                  selected.value = [];
                }
              async function addDemo(){
                await axios.post('/CustomersArea/Cart/add-demo');
                await reload();
              }
              async function update(it){
                await axios.post('/CustomersArea/Cart/update', new URLSearchParams({
                  productId: it.productId, qty: it.qty
                }));
                await reload();
              }
              async function remove(productId){
                await axios.post('/CustomersArea/Cart/remove', new URLSearchParams({ productId }));
                await reload();
              }
              async function clearCart(){
                await axios.post('/CustomersArea/Cart/clear');
                await reload();
              }
              async function checkout(method){
                try{
                  const fd = new URLSearchParams({ customerId: customerId.value, method });
                  const { data } = await axios.post('/CustomersArea/Cart/checkout', fd);
                  if (data?.ok && data?.redirect) {
                    window.location.href = data.redirect;
                    return;
                  }
                  alert('結帳失敗');
                }catch(err){
                  console.error(err);
                  alert('結帳失敗');
                }
              }

              onMounted(reload);
              return { items, total, customerId, reload, addDemo, update, remove, clearCart, checkout };
            }
          }).mount('#app');
        })();
    </script>
}
